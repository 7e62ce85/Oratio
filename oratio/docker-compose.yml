---
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "50m"
    max-file: "4"

services:
  proxy:
    image: docker.io/library/nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx_production.conf:/etc/nginx/nginx.conf:ro,Z
      - ./proxy_params:/etc/nginx/proxy_params:ro,Z
      - ./nginx/js:/etc/nginx/js:ro,Z
      # Let's Encrypt certificates and webroot
      - ./data/certbot/conf:/etc/letsencrypt:ro,Z
      - ./data/certbot/www:/var/www/certbot:ro,Z
    restart: always
    logging: *default-logging
    depends_on:
      - pictrs
      - lemmy-ui

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  lemmy:
    image: dessalines/lemmy:0.19.8
    hostname: lemmy
    restart: always
    logging: *default-logging
    environment:
      - RUST_LOG=warn
    volumes:
      - ./lemmy.hjson:/config/config.hjson:Z
    depends_on:
      - postgres
      - pictrs
    env_file:
      - .env

  lemmy-ui:
    # Using our custom built image with thumbnail fix and debug
    image: lemmy-ui-custom:latest
    build:
      context: ../lemmy-ui-custom/
      dockerfile: Dockerfile
      args:
        - LEMMY_API_KEY=${LEMMY_API_KEY}
        - LEMMY_BCH_API_URL=${LEMMY_BCH_API_URL:-https://payments.oratio.space/api/user_credit}
        - LEMMY_BCH_PAYMENT_URL=${LEMMY_BCH_PAYMENT_URL:-https://payments.oratio.space/}
        - COMMIT_HASH=latest
    container_name: oratio-lemmy-ui-1
    environment:
      - LEMMY_UI_LEMMY_INTERNAL_HOST=lemmy:8536
      # 로컬호스트로 변경
      - LEMMY_UI_LEMMY_EXTERNAL_HOST=localhost
      # 로컬에서는 HTTPS 비활성화
      - LEMMY_UI_HTTPS=false
      - LEMMY_UI_DEBUG=false
      # 추가: PUBLIC_URL 및 NODE_ENV 설정
      - PUBLIC_URL=/
      - NODE_ENV=production
      # COMMIT_HASH 추가 (정적 파일 경로에 사용됨)
      - COMMIT_HASH=latest
      # BCH API 설정 - 실제 도메인으로 업데이트
      - LEMMY_API_KEY=${LEMMY_API_KEY}
      - LEMMY_BCH_API_URL=${LEMMY_BCH_API_URL:-https://payments.oratio.space/api/user_credit}
      - LEMMY_BCH_PAYMENT_URL=${LEMMY_BCH_PAYMENT_URL:-https://payments.oratio.space/}
    volumes:
      - ./volumes/lemmy-ui/extra_themes:/app/extra_themes:Z
    depends_on:
      - lemmy
    restart: always
    logging: *default-logging

  pictrs:
    image: docker.io/asonix/pictrs:0.5
    hostname: pictrs
    environment:
      - PICTRS__SERVER__API_KEY=15JpMF0Xv1NfoJPsY9aG
      - PICTRS__MEDIA__ANIMATION__MAX_WIDTH=256
      - PICTRS__MEDIA__ANIMATION__MAX_HEIGHT=256
      - PICTRS__MEDIA__ANIMATION__MAX_AREA=65536
      - PICTRS__MEDIA__ANIMATION__MAX_FRAME_COUNT=400
      - PICTRS__MEDIA__VIDEO__ENABLE=True
      - PICTRS__MEDIA__VIDEO__MAX_FILE_SIZE=20
      - PICTRS_OPENTELEMETRY_URL=http://otel:4137
      - RUST_LOG=info
      - RUST_BACKTRACE=full
    user: 991:991
    volumes:
      - ./volumes/pictrs:/mnt:Z
    restart: always
    logging: *default-logging

  postgres:
    image: docker.io/pgautoupgrade/pgautoupgrade:16-alpine
    hostname: postgres
    environment:
      - POSTGRES_USER=lemmy
      - POSTGRES_PASSWORD=15JpMF0Xv1NfoJPsY9aG
      - POSTGRES_DB=lemmy
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data:Z
      - ./customPostgresql.conf:/etc/postgresql.conf:Z
    restart: always
    command: postgres -c config_file=/etc/postgresql.conf
    shm_size: 256m
    logging: *default-logging

  postfix:
    image: docker.io/mwader/postfix-relay
    environment:
      # 로컬호스트로 변경
      - POSTFIX_myhostname=localhost
      - POSTFIX_mydomain=localhost
      - POSTFIX_myorigin=localhost
      - POSTFIX_inet_interfaces=all
      - POSTFIX_inet_protocols=ipv4
      # SPF, DKIM 설정을 위한 추가 설정
      - POSTFIX_message_size_limit=10240000
    restart: "always"
    logging: *default-logging
    env_file:
      - .env

  # Proof of Work 검증 서비스 (회원가입 봇 방지)
  pow-validator:
    build:
      context: ./pow_validator_service
      dockerfile: Dockerfile
    container_name: oratio-pow-validator-1
    restart: always
    environment:
      - POW_DIFFICULTY=20
      - POW_MAX_AGE_SECONDS=600
      - LEMMY_BACKEND_URL=http://lemmy:8536
    depends_on:
      - lemmy
    logging: *default-logging
    networks:
      - default

  # BitcoinCash 결제 서비스
  bitcoincash-service:
    build:
      context: ./bitcoincash_service
      dockerfile: Dockerfile
    container_name: bitcoincash-service
    restart: always
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - MOCK_MODE=false  # 실제 결제 활성화
      - TESTNET=false     # 테스트넷 사용 (실제 서비스시 false로 변경)
      - PAYOUT_WALLET=${PAYOUT_WALLET}  # .env 파일에서 설정값 사용
      - DIRECT_MODE=false # Use Electron Cash RPC instead of direct handler
      - ELECTRON_CASH_URL=http://electron-cash:7777
      - ELECTRON_CASH_USER=bchrpc
      - ELECTRON_CASH_PASSWORD=${ELECTRON_CASH_PASSWORD} # Use generated password from .env
      - LEMMY_API_URL=http://lemmy:8536
      - LEMMY_API_KEY=${LEMMY_API_KEY:-changeme}
      - LEMMY_ADMIN_USER=${LEMMY_ADMIN_USER}
      - LEMMY_ADMIN_PASS=${LEMMY_ADMIN_PASS}
      - DB_PATH=/data/payments.db
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY:-secure_random_key}
      - MIN_CONFIRMATIONS=1
    volumes:
      - ./bitcoincash_service:/app
      - ./data/bitcoincash:/data
    ports:
      - "8081:8081"
    depends_on:
      - electron-cash
      - lemmy
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - default

  # 이메일 서비스 (SMTP 포트 차단 우회)
  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    container_name: email-service
    restart: always
    environment:
      - RESEND_API_KEY=${RESEND_API_KEY}
      - SMTP_FROM_ADDRESS=${SMTP_FROM_ADDRESS}
    ports:
      - "1025:1025"  # SMTP 프록시 포트
      - "8025:8025"  # HTTP API 포트
    networks:
      - default
    env_file:
      - .env

  # Electron Cash 지갑 서비스
  electron-cash:
    build: ./electron_cash
    container_name: electron-cash
    restart: always
    networks:
      - default
    volumes:
      # Changed volume mount to avoid overriding the /app directory
      - ./data/electron_cash:/root/.electron-cash
    environment:
      - RPC_USER=bchrpc
      - RPC_PASSWORD=${ELECTRON_CASH_PASSWORD} # Use generated password from .env
    ports:
      - "7777:7777"
    # Memory limits to prevent memory leaks from consuming all system RAM
    mem_limit: 2g
    mem_reservation: 512m
    deploy:
      resources:
        limits:
          memory: 2g
        reservations:
          memory: 512m

volumes:
  electron_cash_data:
    # Volume for Electron Cash wallet data
